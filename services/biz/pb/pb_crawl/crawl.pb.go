// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: crawl.proto

package pb_crawl

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrawledFilms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*CrawledFilm `protobuf:"bytes,1,rep,name=Films,proto3" json:"Films,omitempty"`
}

func (x *CrawledFilms) Reset() {
	*x = CrawledFilms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrawledFilms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawledFilms) ProtoMessage() {}

func (x *CrawledFilms) ProtoReflect() protoreflect.Message {
	mi := &file_crawl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawledFilms.ProtoReflect.Descriptor instead.
func (*CrawledFilms) Descriptor() ([]byte, []int) {
	return file_crawl_proto_rawDescGZIP(), []int{0}
}

func (x *CrawledFilms) GetFilms() []*CrawledFilm {
	if x != nil {
		return x.Films
	}
	return nil
}

type CrawledFilm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Year   string  `protobuf:"bytes,2,opt,name=Year,proto3" json:"Year,omitempty"`
	Rating float64 `protobuf:"fixed64,3,opt,name=Rating,proto3" json:"Rating,omitempty"`
}

func (x *CrawledFilm) Reset() {
	*x = CrawledFilm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrawledFilm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawledFilm) ProtoMessage() {}

func (x *CrawledFilm) ProtoReflect() protoreflect.Message {
	mi := &file_crawl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawledFilm.ProtoReflect.Descriptor instead.
func (*CrawledFilm) Descriptor() ([]byte, []int) {
	return file_crawl_proto_rawDescGZIP(), []int{1}
}

func (x *CrawledFilm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CrawledFilm) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *CrawledFilm) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type ResCrawl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResCrawl) Reset() {
	*x = ResCrawl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResCrawl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResCrawl) ProtoMessage() {}

func (x *ResCrawl) ProtoReflect() protoreflect.Message {
	mi := &file_crawl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResCrawl.ProtoReflect.Descriptor instead.
func (*ResCrawl) Descriptor() ([]byte, []int) {
	return file_crawl_proto_rawDescGZIP(), []int{2}
}

var File_crawl_proto protoreflect.FileDescriptor

var file_crawl_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70,
	0x62, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x22, 0x3b, 0x0a, 0x0c, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x05, 0x46,
	0x69, 0x6c, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x0b, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x59, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x32,
	0x47, 0x0a, 0x0a, 0x42, 0x69, 0x7a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a,
	0x09, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x5f,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x70,
	0x62, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crawl_proto_rawDescOnce sync.Once
	file_crawl_proto_rawDescData = file_crawl_proto_rawDesc
)

func file_crawl_proto_rawDescGZIP() []byte {
	file_crawl_proto_rawDescOnce.Do(func() {
		file_crawl_proto_rawDescData = protoimpl.X.CompressGZIP(file_crawl_proto_rawDescData)
	})
	return file_crawl_proto_rawDescData
}

var file_crawl_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_crawl_proto_goTypes = []interface{}{
	(*CrawledFilms)(nil), // 0: pb_crawl.CrawledFilms
	(*CrawledFilm)(nil),  // 1: pb_crawl.CrawledFilm
	(*ResCrawl)(nil),     // 2: pb_crawl.ResCrawl
}
var file_crawl_proto_depIdxs = []int32{
	1, // 0: pb_crawl.CrawledFilms.Films:type_name -> pb_crawl.CrawledFilm
	0, // 1: pb_crawl.BizService.CrawlFilm:input_type -> pb_crawl.CrawledFilms
	2, // 2: pb_crawl.BizService.CrawlFilm:output_type -> pb_crawl.ResCrawl
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_crawl_proto_init() }
func file_crawl_proto_init() {
	if File_crawl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crawl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrawledFilms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrawledFilm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResCrawl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crawl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawl_proto_goTypes,
		DependencyIndexes: file_crawl_proto_depIdxs,
		MessageInfos:      file_crawl_proto_msgTypes,
	}.Build()
	File_crawl_proto = out.File
	file_crawl_proto_rawDesc = nil
	file_crawl_proto_goTypes = nil
	file_crawl_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BizServiceClient is the client API for BizService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BizServiceClient interface {
	CrawlFilm(ctx context.Context, in *CrawledFilms, opts ...grpc.CallOption) (*ResCrawl, error)
}

type bizServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBizServiceClient(cc grpc.ClientConnInterface) BizServiceClient {
	return &bizServiceClient{cc}
}

func (c *bizServiceClient) CrawlFilm(ctx context.Context, in *CrawledFilms, opts ...grpc.CallOption) (*ResCrawl, error) {
	out := new(ResCrawl)
	err := c.cc.Invoke(ctx, "/pb_crawl.BizService/CrawlFilm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BizServiceServer is the server API for BizService service.
type BizServiceServer interface {
	CrawlFilm(context.Context, *CrawledFilms) (*ResCrawl, error)
}

// UnimplementedBizServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBizServiceServer struct {
}

func (*UnimplementedBizServiceServer) CrawlFilm(context.Context, *CrawledFilms) (*ResCrawl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CrawlFilm not implemented")
}

func RegisterBizServiceServer(s *grpc.Server, srv BizServiceServer) {
	s.RegisterService(&_BizService_serviceDesc, srv)
}

func _BizService_CrawlFilm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CrawledFilms)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BizServiceServer).CrawlFilm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_crawl.BizService/CrawlFilm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BizServiceServer).CrawlFilm(ctx, req.(*CrawledFilms))
	}
	return interceptor(ctx, in, info, handler)
}

var _BizService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb_crawl.BizService",
	HandlerType: (*BizServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CrawlFilm",
			Handler:    _BizService_CrawlFilm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "crawl.proto",
}
