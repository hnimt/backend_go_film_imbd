// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bookmark.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReqAddBookmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	FilmID string `protobuf:"bytes,2,opt,name=FilmID,proto3" json:"FilmID,omitempty"`
}

func (x *ReqAddBookmark) Reset() {
	*x = ReqAddBookmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmark_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddBookmark) ProtoMessage() {}

func (x *ReqAddBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_bookmark_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddBookmark.ProtoReflect.Descriptor instead.
func (*ReqAddBookmark) Descriptor() ([]byte, []int) {
	return file_bookmark_proto_rawDescGZIP(), []int{0}
}

func (x *ReqAddBookmark) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ReqAddBookmark) GetFilmID() string {
	if x != nil {
		return x.FilmID
	}
	return ""
}

type ResAddBookmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res string `protobuf:"bytes,1,opt,name=Res,proto3" json:"Res,omitempty"`
}

func (x *ResAddBookmark) Reset() {
	*x = ResAddBookmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmark_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAddBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAddBookmark) ProtoMessage() {}

func (x *ResAddBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_bookmark_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAddBookmark.ProtoReflect.Descriptor instead.
func (*ResAddBookmark) Descriptor() ([]byte, []int) {
	return file_bookmark_proto_rawDescGZIP(), []int{1}
}

func (x *ResAddBookmark) GetRes() string {
	if x != nil {
		return x.Res
	}
	return ""
}

type ReqDelBookmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	FilmID string `protobuf:"bytes,2,opt,name=FilmID,proto3" json:"FilmID,omitempty"`
}

func (x *ReqDelBookmark) Reset() {
	*x = ReqDelBookmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmark_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDelBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDelBookmark) ProtoMessage() {}

func (x *ReqDelBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_bookmark_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDelBookmark.ProtoReflect.Descriptor instead.
func (*ReqDelBookmark) Descriptor() ([]byte, []int) {
	return file_bookmark_proto_rawDescGZIP(), []int{2}
}

func (x *ReqDelBookmark) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ReqDelBookmark) GetFilmID() string {
	if x != nil {
		return x.FilmID
	}
	return ""
}

type ResDelBookmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res string `protobuf:"bytes,1,opt,name=Res,proto3" json:"Res,omitempty"`
}

func (x *ResDelBookmark) Reset() {
	*x = ResDelBookmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmark_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResDelBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResDelBookmark) ProtoMessage() {}

func (x *ResDelBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_bookmark_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResDelBookmark.ProtoReflect.Descriptor instead.
func (*ResDelBookmark) Descriptor() ([]byte, []int) {
	return file_bookmark_proto_rawDescGZIP(), []int{3}
}

func (x *ResDelBookmark) GetRes() string {
	if x != nil {
		return x.Res
	}
	return ""
}

type ReqFindByUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *ReqFindByUser) Reset() {
	*x = ReqFindByUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bookmark_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFindByUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFindByUser) ProtoMessage() {}

func (x *ReqFindByUser) ProtoReflect() protoreflect.Message {
	mi := &file_bookmark_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFindByUser.ProtoReflect.Descriptor instead.
func (*ReqFindByUser) Descriptor() ([]byte, []int) {
	return file_bookmark_proto_rawDescGZIP(), []int{4}
}

func (x *ReqFindByUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

var File_bookmark_proto protoreflect.FileDescriptor

var file_bookmark_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0x40, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x69, 0x6c, 0x6d, 0x49, 0x44, 0x22, 0x22, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64,
	0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x52, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x6d, 0x49, 0x44, 0x22, 0x22, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x52, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x52, 0x65, 0x73,
	0x22, 0x27, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x32, 0x83, 0x01, 0x0a, 0x0f, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x65,
	0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x44, 0x65, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x00, 0x42,
	0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bookmark_proto_rawDescOnce sync.Once
	file_bookmark_proto_rawDescData = file_bookmark_proto_rawDesc
)

func file_bookmark_proto_rawDescGZIP() []byte {
	file_bookmark_proto_rawDescOnce.Do(func() {
		file_bookmark_proto_rawDescData = protoimpl.X.CompressGZIP(file_bookmark_proto_rawDescData)
	})
	return file_bookmark_proto_rawDescData
}

var file_bookmark_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bookmark_proto_goTypes = []interface{}{
	(*ReqAddBookmark)(nil), // 0: pb.ReqAddBookmark
	(*ResAddBookmark)(nil), // 1: pb.ResAddBookmark
	(*ReqDelBookmark)(nil), // 2: pb.ReqDelBookmark
	(*ResDelBookmark)(nil), // 3: pb.ResDelBookmark
	(*ReqFindByUser)(nil),  // 4: pb.ReqFindByUser
}
var file_bookmark_proto_depIdxs = []int32{
	0, // 0: pb.BookmarkService.AddBookmark:input_type -> pb.ReqAddBookmark
	2, // 1: pb.BookmarkService.DelBookmark:input_type -> pb.ReqDelBookmark
	1, // 2: pb.BookmarkService.AddBookmark:output_type -> pb.ResAddBookmark
	3, // 3: pb.BookmarkService.DelBookmark:output_type -> pb.ResDelBookmark
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bookmark_proto_init() }
func file_bookmark_proto_init() {
	if File_bookmark_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bookmark_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddBookmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmark_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAddBookmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmark_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDelBookmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmark_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResDelBookmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bookmark_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFindByUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bookmark_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bookmark_proto_goTypes,
		DependencyIndexes: file_bookmark_proto_depIdxs,
		MessageInfos:      file_bookmark_proto_msgTypes,
	}.Build()
	File_bookmark_proto = out.File
	file_bookmark_proto_rawDesc = nil
	file_bookmark_proto_goTypes = nil
	file_bookmark_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BookmarkServiceClient is the client API for BookmarkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookmarkServiceClient interface {
	AddBookmark(ctx context.Context, in *ReqAddBookmark, opts ...grpc.CallOption) (*ResAddBookmark, error)
	DelBookmark(ctx context.Context, in *ReqDelBookmark, opts ...grpc.CallOption) (*ResDelBookmark, error)
}

type bookmarkServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBookmarkServiceClient(cc grpc.ClientConnInterface) BookmarkServiceClient {
	return &bookmarkServiceClient{cc}
}

func (c *bookmarkServiceClient) AddBookmark(ctx context.Context, in *ReqAddBookmark, opts ...grpc.CallOption) (*ResAddBookmark, error) {
	out := new(ResAddBookmark)
	err := c.cc.Invoke(ctx, "/pb.BookmarkService/AddBookmark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookmarkServiceClient) DelBookmark(ctx context.Context, in *ReqDelBookmark, opts ...grpc.CallOption) (*ResDelBookmark, error) {
	out := new(ResDelBookmark)
	err := c.cc.Invoke(ctx, "/pb.BookmarkService/DelBookmark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookmarkServiceServer is the server API for BookmarkService service.
type BookmarkServiceServer interface {
	AddBookmark(context.Context, *ReqAddBookmark) (*ResAddBookmark, error)
	DelBookmark(context.Context, *ReqDelBookmark) (*ResDelBookmark, error)
}

// UnimplementedBookmarkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBookmarkServiceServer struct {
}

func (*UnimplementedBookmarkServiceServer) AddBookmark(context.Context, *ReqAddBookmark) (*ResAddBookmark, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBookmark not implemented")
}
func (*UnimplementedBookmarkServiceServer) DelBookmark(context.Context, *ReqDelBookmark) (*ResDelBookmark, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelBookmark not implemented")
}

func RegisterBookmarkServiceServer(s *grpc.Server, srv BookmarkServiceServer) {
	s.RegisterService(&_BookmarkService_serviceDesc, srv)
}

func _BookmarkService_AddBookmark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqAddBookmark)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookmarkServiceServer).AddBookmark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BookmarkService/AddBookmark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookmarkServiceServer).AddBookmark(ctx, req.(*ReqAddBookmark))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookmarkService_DelBookmark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDelBookmark)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookmarkServiceServer).DelBookmark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BookmarkService/DelBookmark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookmarkServiceServer).DelBookmark(ctx, req.(*ReqDelBookmark))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookmarkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.BookmarkService",
	HandlerType: (*BookmarkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBookmark",
			Handler:    _BookmarkService_AddBookmark_Handler,
		},
		{
			MethodName: "DelBookmark",
			Handler:    _BookmarkService_DelBookmark_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bookmark.proto",
}
